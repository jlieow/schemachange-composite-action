name: "Schemachange"
description: "Executes DDL Statements into a Snowflake Database"
inputs:
    DRY_RUN:
        description: 'Input "--dry-run" to run in dry run mode.'
        required: false
        default: ""
    SF_DATABASE:
        description: "Snowflake Database."
        required: true
    LOCATION_OF_DDL_SCRIPTS:
        description: "Dir in the repo which contains the DDL scripts."
        required: true
    SF_ACCOUNT:
        description: "Snowflake Account."
        required: true
    SF_USERNAME:
        description: "Snowflake User."
        required: true
    SF_ROLE:
        description: "Snowflake Role."
        required: true
    SF_WAREHOUSE:
        description: "Snowflake Warehouse."
        required: true
    SF_PASSWORD:
        description: "Snowflake User Password."
        required: false
    SF_PRIVATE_KEY:
        description: "Snowflake private key content. Generated according to Snowflake Documentation: https://docs.snowflake.com/en/user-guide/key-pair-auth"
        required: false
    SF_PRIVATE_KEY_FILE_PWD:
        description: "Snowflake private key password. Generated according to Snowflake Documentation: https://docs.snowflake.com/en/user-guide/key-pair-auth"
        required: false
runs:
    using: "composite"
    steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Use Python 3.8.x
          uses: actions/setup-python@v2.2.1
          with:
              python-version: 3.8.x

        - name: Create and populate connections.toml
          shell: bash
          env:
              SF_ACCOUNT: ${{ inputs.SF_ACCOUNT }}
              SF_USERNAME: ${{ inputs.SF_USERNAME }}
              SF_ROLE: ${{ inputs.SF_ROLE }}
              SF_WAREHOUSE: ${{ inputs.SF_WAREHOUSE }}
              SF_DATABASE: ${{ inputs.SF_DATABASE }}
              SF_PASSWORD: ${{ inputs.SF_PASSWORD }}
              SF_PRIVATE_KEY: ${{ inputs.SF_PRIVATE_KEY }}
              SF_PRIVATE_KEY_FILE: ./key.p8
              SF_PRIVATE_KEY_FILE_PWD: ${{ inputs.SF_PRIVATE_KEY_FILE_PWD }}
          run: |
              # If key is provided create key file
              if [[ -n "${{ inputs.SF_PRIVATE_KEY }}" ]]; then
                  echo "Creating Private Key File"
                  echo "${{ inputs.SF_PRIVATE_KEY }}"  > ./key.p8
                  chmod 600 ./key.p8
              fi

              echo "Current Action Path: ${{ github.action_path }}"
              echo "You can use this path to access files located in the same repository as the action."
              chmod +x ${{ github.action_path }}/populateConnection.sh
              bash ${{ github.action_path }}/populateConnection.sh
              cat ./connections.toml

        - name: Install dependencies
          shell: bash
          run: |
              echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
              python --version
              pip install schemachange

        - name: "Deploying Schemachange on database: ${{ inputs.SF_DATABASE }}"
          shell: bash
          run: |
              echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
              python --version
              echo "Step 1: Installing schemachange"
              pip install schemachange

              echo "Step 2: Deploying schemachange on database: ${{ inputs.SF_DATABASE }}"
              schemachange \
                --root-folder $GITHUB_WORKSPACE/${{ inputs.LOCATION_OF_DDL_SCRIPTS }} \
                --connections-file-path ./connections.toml \
                --connection-name default \
                --change-history-table ${{ inputs.SF_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY \
                --create-change-history-table \
                ${{ inputs.DRY_RUN }}
